---
- name: Deploy containerized app to Kubernetes via Helm
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/production.yml

  tasks:

    - name: Pre-flight | Check Docker
      command: docker version
      register: docker_check
      failed_when: docker_check.rc != 0

    - name: Pre-flight | Check Helm
      command: helm version
      register: helm_check
      failed_when: helm_check.rc != 0

    - name: Pre-flight | Check kubectl
      command: kubectl version --client
      register: kubectl_check
      failed_when: kubectl_check.rc != 0

    - name: Pre-flight | Check Helm chart path
      stat:
        path: "{{ helm_chart_path }}"
      register: chart_path_check
      failed_when: not chart_path_check.stat.exists

    - block:
        - name: Login to Nexus
          docker_login:
            registry_url: "{{ nexus_registry }}"
            username: "{{ nexus_username }}"
            password: "{{ nexus_password }}"
          no_log: true

        - name: Pull image from Nexus
          shell: docker pull {{ nexus_registry }}/{{ image_name }}:{{ image_tag }}
          register: pull_result
          retries: 3
          delay: 10
          until: pull_result.rc == 0

        - name: Tag image for Harbor
          shell: docker tag {{ nexus_registry }}/{{ image_name }}:{{ image_tag }} {{ harbor_registry }}/{{ image_name }}:{{ image_tag }}

        - name: Login to Harbor
          docker_login:
            registry_url: "{{ harbor_registry }}"
            username: "{{ harbor_username }}"
            password: "{{ harbor_password }}"
          no_log: true

        - name: Push image to Harbor
          shell: docker push {{ harbor_registry }}/{{ image_name }}:{{ image_tag }}

      rescue:
        - name: Log and fail if image sync failed
          fail:
            msg: "Image sync failed. Check credentials or registry access."

    - block:
        - name: Deploy using Helm
          community.kubernetes.helm:
            chart_path: "{{ helm_chart_path }}"
            release_name: "{{ release_name }}"
            namespace: "{{ namespace }}"
            values:
              image:
                tag: "{{ image_tag }}"
            wait: true
            timeout: "{{ time_out }}"
            atomic: true
      rescue:
        - name: Rollback on failure
          shell: helm rollback {{ release_name }}
          when: enable_rollback | bool

    - name: Health check
      shell: kubectl rollout status deployment/{{ release_name }} -n {{ namespace }}
      register: rollout_status
      failed_when: "'successfully rolled out' not in rollout_status.stdout"

    - name: Cleanup local image
      shell: docker rmi {{ harbor_registry }}/{{ image_name }}:{{ image_tag }}
      when: enable_cleanup | bool
